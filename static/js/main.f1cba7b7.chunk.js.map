{"version":3,"sources":["Data.js","App.js","serviceWorker.js","index.js"],"names":["aspects","core_full","name","id","family","tier","requirements","rewards","force","entropy","form","inertia","life","nodes","hasChoiceNode","core_force","isCoreNode","falcon","hatchet","hornet","serpent","arcanist","archer","manticore","scorpion","tiger","conqueror","kraken","wrath","core_entropy","crow","fly","vulture","wolf","blood_ape","extinction","imp","hyena","supplicant","death","decay","demilich","core_form","chalice","key","nautilus","silkworm","basilisk","doppelganger","dragon","gryphon","wealth","cerberus","ritual","sphinx","core_inertia","armadillo","auroch","crab","guardsman","casque","centurion","gladiator","hippopotamus","rhinoceros","arena","champion","fortress","core_life","beetle","hind","lizard","rabbit","enchantress","huntress","nymph","pegasus","stag","goddess","hope","splendor","strings","String","prototype","format","args","arguments","this","replace","m","n","num","extraAspects","x","aspect","embs","z","newAspect","generated","extraEmbodimentType","v","undefined","b","dipping","y","rewardsPerPoint","totalRequirements","Checkbox","data","e","props","app","state","selection","includes","updateSelection","updateExclusion","excluded","text","className","onClick","toggle","React","Component","Aspect","elements","element","amount","type","push","string","header","charAt","toUpperCase","slice","cost","getRewards","nodeText","content","getTooltip","placement","duration","getRequirementsText","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","isInObject","thing","obj","getTotalPoints","build","points","getTotalReqs","embodiments","getTotalRewards","r","fullfillsRequirements","reqs","aspectAlreadyPicked","App","result","waiting","useFullCore","considerDipping","selfSustain","pointsBudget","preference","iterations","list","realList","excludedAspects","asp","newList","hasRelevantReward","reward","bind","func","hasOwnProperty","aspectWithHighestRequirements","i","chosenAspects","console","log","setState","filterApplicableAspects","window","confirm","Object","keys","iteration","u","availableAspects","attempts","_","sample","skipRandomChoice","breakThis","chosenAspect","newGoals","allChosenNodesObtained","aspectsToRemove","filteredBuild","filter","val","pointsToReach","pointsToSustain","buildInfo","finalCost","score","totalEmbodiments","bestBuild","index","arr","forceAspects","entropyAspects","formAspects","inertiaAspects","lifeAspects","resultText","currentAspect","clickCallback","hr","value","onChange","target","checked","calculate","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f1cba7b7.chunk.js","sourcesContent":["export const aspects = {\r\n    core_full: {\r\n      name: \"Core (Full)\",\r\n      id: \"core_full\",\r\n      family: \"special\",\r\n      tier: 1,\r\n      requirements: {\r\n      },\r\n      rewards: {\r\n        force: 2,\r\n        entropy: 2,\r\n        form: 2,\r\n        inertia: 2,\r\n        life: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    core_force: {\r\n      name: \"Core (Force)\",\r\n      id: \"core_force\",\r\n      family: \"force\",\r\n      tier: 1,\r\n      requirements: {\r\n      },\r\n      rewards: {\r\n        force: 1,\r\n      },\r\n      nodes: 1,\r\n      hasChoiceNode: false,\r\n      isCoreNode: true,\r\n    },\r\n    falcon: {\r\n      name: \"Falcon\",\r\n      id: \"falcon\",\r\n      family: \"force\",\r\n      tier: 1,\r\n      requirements: {\r\n        force: 1\r\n      },\r\n      rewards: {\r\n        force: 3,\r\n        life: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    hatchet: {\r\n      name: \"Hatchet\",\r\n      id: \"hatchet\",\r\n      family: \"force\",\r\n      tier: 1,\r\n      requirements: {\r\n        force: 1\r\n      },\r\n      rewards: {\r\n        force: 3,\r\n        entropy: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    hornet: {\r\n      name: \"Hornet\",\r\n      id: \"hornet\",\r\n      family: \"force\",\r\n      tier: 1,\r\n      requirements: {\r\n        force: 1,\r\n      },\r\n      rewards: {\r\n        force: 3,\r\n        life: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    serpent: {\r\n      name: \"Serpent\",\r\n      id: \"serpent\",\r\n      family: \"force\",\r\n      tier: 1,\r\n      requirements: {\r\n        force: 1,\r\n      },\r\n      rewards: {\r\n        force: 3,\r\n        entropy: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    // FORCE TIER 2\r\n    arcanist: {\r\n      name: \"Arcanist\",\r\n      id: \"arcanist\",\r\n      family: \"force\",\r\n      tier: 2,\r\n      requirements: {\r\n        force: 5,\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        force: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    archer: {\r\n      name: \"Archer\",\r\n      id: \"archer\",\r\n      family: \"force\",\r\n      tier: 2,\r\n      requirements: {\r\n        force: 3,\r\n        entropy: 2,\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        force: 2,\r\n        entropy: 1,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    manticore: {\r\n      name: \"Manticore\",\r\n      id: \"manticore\",\r\n      family: \"force\",\r\n      tier: 2,\r\n      requirements: {\r\n        force: 5,\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        force: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    scorpion: {\r\n      name: \"Scorpion\",\r\n      id: \"scorpion\",\r\n      family: \"force\",\r\n      tier: 2,\r\n      requirements: {\r\n        force: 4,\r\n        entropy: 2,\r\n      },\r\n      rewards: {\r\n        force: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    tiger: {\r\n      name: \"Tiger\",\r\n      id: \"tiger\",\r\n      family: \"force\",\r\n      tier: 2,\r\n      requirements: {\r\n        force: 4,\r\n        life: 2,\r\n      },\r\n      rewards: {\r\n        force: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    // FORCE TIER 3\r\n    conqueror: {\r\n      name: \"Conqueror\",\r\n      id: \"conqueror\",\r\n      family: \"force\",\r\n      tier: 3,\r\n      requirements: {\r\n        force: 7,\r\n        entropy: 1,\r\n        life: 5,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    kraken: {\r\n      name: \"Kraken\",\r\n      id: \"kraken\",\r\n      family: \"force\",\r\n      tier: 3,\r\n      requirements: {\r\n        force: 7,\r\n        entropy: 5,\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    wrath: {\r\n      name: \"Wrath\",\r\n      id: \"wrath\",\r\n      family: \"force\",\r\n      tier: 3,\r\n      requirements: {\r\n        force: 8,\r\n        entropy: 3,\r\n        life: 2,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    // ENTROPY TIER 1\r\n    core_entropy: {\r\n      name: \"Core (Entropy)\",\r\n      id: \"core_entropy\",\r\n      family: \"entropy\",\r\n      tier: 1,\r\n      requirements: {\r\n      },\r\n      rewards: {\r\n        entropy: 1,\r\n      },\r\n      nodes: 1,\r\n      hasChoiceNode: false,\r\n      isCoreNode: true,\r\n    },\r\n    crow: {\r\n      name: \"Crow\",\r\n      id: \"crow\",\r\n      family: \"entropy\",\r\n      tier: 1,\r\n      requirements: {\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        entropy: 3,\r\n        form: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    fly: {\r\n      name: \"Fly\",\r\n      id: \"fly\",\r\n      family: \"entropy\",\r\n      tier: 1,\r\n      requirements: {\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        entropy: 3,\r\n        form: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    vulture: {\r\n      name: \"Vulture\",\r\n      id: \"vulture\",\r\n      family: \"entropy\",\r\n      tier: 1,\r\n      requirements: {\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        entropy: 3,\r\n        force: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    wolf: {\r\n      name: \"Wolf\",\r\n      id: \"wolf\",\r\n      family: \"entropy\",\r\n      tier: 1,\r\n      requirements: {\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        entropy: 3,\r\n        force: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    // ENTROPY TIER 2\r\n    blood_ape: {\r\n      name: \"Blood Ape\",\r\n      id: \"blood_ape\",\r\n      family: \"entropy\",\r\n      tier: 2,\r\n      requirements: {\r\n        entropy: 3,\r\n        force: 1,\r\n        form: 2,\r\n      },\r\n      rewards: {\r\n        entropy: 2,\r\n        form: 1,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    extinction: {\r\n      name: \"Extinction\",\r\n      id: \"extinction\",\r\n      family: \"entropy\",\r\n      tier: 2,\r\n      requirements: {\r\n        entropy: 4,\r\n        force: 2,\r\n      },\r\n      rewards: {\r\n        entropy: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    imp: {\r\n      name: \"Imp\",\r\n      id: \"imp\",\r\n      family: \"entropy\",\r\n      tier: 2,\r\n      requirements: {\r\n        entropy: 5,\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n        entropy: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    hyena: {\r\n      name: \"Hyena\",\r\n      id: \"hyena\",\r\n      family: \"entropy\",\r\n      tier: 2,\r\n      requirements: {\r\n        entropy: 5,\r\n        force: 1,\r\n      },\r\n      rewards: {\r\n        entropy: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    supplicant: {\r\n      name: \"Supplicant\",\r\n      id: \"supplicant\",\r\n      family: \"entropy\",\r\n      tier: 2,\r\n      requirements: {\r\n        entropy: 4,\r\n        form: 2,\r\n      },\r\n      rewards: {\r\n        entropy: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    // ENTROPY TIER 3\r\n    death: {\r\n      name: \"Death\",\r\n      id: \"death\",\r\n      family: \"entropy\",\r\n      tier: 3,\r\n      requirements: {\r\n        entropy: 8,\r\n        force: 2,\r\n        form: 3,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    decay: {\r\n      name: \"Decay\",\r\n      id: \"decay\",\r\n      family: \"entropy\",\r\n      tier: 3,\r\n      requirements: {\r\n        entropy: 7,\r\n        force: 5,\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    demilich: {\r\n      name: \"Demilich\",\r\n      id: \"demilich\",\r\n      family: \"entropy\",\r\n      tier: 3,\r\n      requirements: {\r\n        entropy: 7,\r\n        force: 1,\r\n        form: 5,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 6,\r\n      hasChoiceNode: false,\r\n    },\r\n    // FORM TIER 1\r\n    core_form: {\r\n      name: \"Core (Form)\",\r\n      id: \"core_form\",\r\n      family: \"form\",\r\n      tier: 1,\r\n      requirements: {\r\n      },\r\n      rewards: {\r\n        form: 1,\r\n      },\r\n      nodes: 1,\r\n      hasChoiceNode: false,\r\n      isCoreNode: true,\r\n    },\r\n    chalice: { // consume the cum chalice\r\n      name: \"Chalice\",\r\n      id: \"chalice\",\r\n      family: \"form\",\r\n      tier: 1,\r\n      requirements: {\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n        form: 3,\r\n        inertia: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    key: {\r\n      name: \"Key\",\r\n      id: \"key\",\r\n      family: \"form\",\r\n      tier: 1,\r\n      requirements: {\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n        form: 3,\r\n        entropy: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    nautilus: {\r\n      name: \"Nautilus\",\r\n      id: \"nautilus\",\r\n      family: \"form\",\r\n      tier: 1,\r\n      requirements: {\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n        form: 3,\r\n        inertia: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    silkworm: {\r\n      name: \"Silkworm\",\r\n      id: \"silkworm\",\r\n      family: \"form\",\r\n      tier: 1,\r\n      requirements: {\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n        form: 3,\r\n        entropy: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    // FORM TIER 2\r\n    basilisk: {\r\n      name: \"Basilisk\",\r\n      id: \"basilisk\",\r\n      family: \"form\",\r\n      tier: 2,\r\n      requirements: {\r\n        form: 4,\r\n        entropy: 2,\r\n      },\r\n      rewards: {\r\n        form: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    doppelganger: {\r\n      name: \"Doppelganger\",\r\n      id: \"doppelganger\",\r\n      family: \"form\",\r\n      tier: 2,\r\n      requirements: {\r\n        form: 5,\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        form: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    dragon: {\r\n      name: \"Dragon\",\r\n      id: \"dragon\",\r\n      family: \"form\",\r\n      tier: 2,\r\n      requirements: {\r\n        form: 5,\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        form: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    gryphon: {\r\n      name: \"Gryphon\",\r\n      id: \"gryphon\",\r\n      family: \"form\",\r\n      tier: 2,\r\n      requirements: {\r\n        form: 4,\r\n        inertia: 2,\r\n      },\r\n      rewards: {\r\n        form: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    wealth: {\r\n      name: \"Wealth\",\r\n      id: \"wealth\",\r\n      family: \"form\",\r\n      tier: 2,\r\n      requirements: {\r\n        form: 3,\r\n        inertia: 2,\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n        form: 2,\r\n        inertia: 1,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    // FORM TIER 3\r\n    cerberus: {\r\n      name: \"Cerberus\",\r\n      id: \"cerberus\",\r\n      family: \"form\",\r\n      tier: 3,\r\n      requirements: {\r\n        form: 7,\r\n        inertia: 5,\r\n        entropy: 1,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    ritual: {\r\n      name: \"Ritual\",\r\n      id: \"ritual\",\r\n      family: \"form\",\r\n      tier: 3,\r\n      requirements: {\r\n        form: 7,\r\n        inertia: 1,\r\n        entropy: 5,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    sphinx: {\r\n      name: \"Sphinx\",\r\n      id: \"sphinx\",\r\n      family: \"form\",\r\n      tier: 3,\r\n      requirements: {\r\n        form: 8,\r\n        inertia: 3,\r\n        entropy: 2,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    // INERTIA TIER 1\r\n    core_inertia: {\r\n      name: \"Core (Inertia)\",\r\n      id: \"core_inertia\",\r\n      family: \"inertia\",\r\n      tier: 1,\r\n      requirements: {\r\n      },\r\n      rewards: {\r\n        inertia: 1,\r\n      },\r\n      nodes: 1,\r\n      hasChoiceNode: false,\r\n      isCoreNode: true,\r\n    },\r\n    armadillo: {\r\n      name: \"Armadillo\",\r\n      id: \"armadillo\",\r\n      family: \"inertia\",\r\n      tier: 1,\r\n      requirements: {\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        inertia: 3,\r\n        form: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    auroch: {\r\n      name: \"Auroch\",\r\n      id: \"auroch\",\r\n      family: \"inertia\",\r\n      tier: 1,\r\n      requirements: {\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        inertia: 3,\r\n        life: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    crab: {\r\n      name: \"Crab\",\r\n      id: \"crab\",\r\n      family: \"inertia\",\r\n      tier: 1,\r\n      requirements: {\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        inertia: 3,\r\n        life: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    guardsman: {\r\n      name: \"Guardsman\",\r\n      id: \"guardsman\",\r\n      family: \"inertia\",\r\n      tier: 1,\r\n      requirements: {\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        inertia: 3,\r\n        form: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    // INERTIA TIER 2\r\n    casque: {\r\n      name: \"Casque\",\r\n      id: \"casque\",\r\n      family: \"inertia\",\r\n      tier: 2,\r\n      requirements: {\r\n        inertia: 5,\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        inertia: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    centurion: {\r\n      name: \"Centurion\",\r\n      id: \"centurion\",\r\n      family: \"inertia\",\r\n      tier: 2,\r\n      requirements: {\r\n        inertia: 3,\r\n        form: 1,\r\n        life: 2,\r\n      },\r\n      rewards: {\r\n        inertia: 2,\r\n        life: 1,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    gladiator: {\r\n      name: \"Gladiator\",\r\n      id: \"gladiator\",\r\n      family: \"inertia\",\r\n      tier: 2,\r\n      requirements: {\r\n        inertia: 3,\r\n        form: 3,\r\n      },\r\n      rewards: {\r\n        inertia: 2,\r\n        form: 1,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    hippopotamus: {\r\n      name: \"Hippopotamus\",\r\n      id: \"hippopotamus\",\r\n      family: \"inertia\",\r\n      tier: 2,\r\n      requirements: {\r\n        inertia: 4,\r\n        life: 2,\r\n      },\r\n      rewards: {\r\n        inertia: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    rhinoceros: {\r\n      name: \"Rhinoceros\",\r\n      id: \"rhinoceros\",\r\n      family: \"inertia\",\r\n      tier: 2,\r\n      requirements: {\r\n        inertia: 4,\r\n        form: 2,\r\n      },\r\n      rewards: {\r\n        inertia: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    // INERTIA TIER 3\r\n    arena: {\r\n      name: \"Arena\",\r\n      id: \"arena\",\r\n      family: \"inertia\",\r\n      tier: 3,\r\n      requirements: {\r\n        inertia: 7,\r\n        life: 5,\r\n        form: 1,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    champion: {\r\n      name: \"Champion\",\r\n      id: \"champion\",\r\n      family: \"inertia\",\r\n      tier: 3,\r\n      requirements: {\r\n        inertia: 8,\r\n        life: 3,\r\n        form: 2,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    fortress: {\r\n      name: \"Fortress\",\r\n      id: \"fortress\",\r\n      family: \"inertia\",\r\n      tier: 3,\r\n      requirements: {\r\n        inertia: 7,\r\n        life: 1,\r\n        form: 5,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    // LIFE TIER 1\r\n    core_life: {\r\n      name: \"Core (Life)\",\r\n      id: \"core_life\",\r\n      family: \"life\",\r\n      tier: 1,\r\n      requirements: {\r\n      },\r\n      rewards: {\r\n        life: 1,\r\n      },\r\n      nodes: 1,\r\n      hasChoiceNode: false,\r\n      isCoreNode: true,\r\n    },\r\n    beetle: {\r\n      name: \"Beetle\",\r\n      id: \"beetle\",\r\n      family: \"life\",\r\n      tier: 1,\r\n      requirements: {\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        life: 3,\r\n        force: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    hind: {\r\n      name: \"Hind\",\r\n      id: \"hind\",\r\n      family: \"life\",\r\n      tier: 1,\r\n      requirements: {\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        life: 3,\r\n        force: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    lizard: {\r\n      name: \"Lizard\",\r\n      id: \"lizard\",\r\n      family: \"life\",\r\n      tier: 1,\r\n      requirements: {\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        life: 3,\r\n        inertia: 1,\r\n      },\r\n      nodes: 3,\r\n      hasChoiceNode: false,\r\n    },\r\n    rabbit: {\r\n      name: \"Rabbit\",\r\n      id: \"rabbit\",\r\n      family: \"life\",\r\n      tier: 1,\r\n      requirements: {\r\n        life: 1,\r\n      },\r\n      rewards: {\r\n        life: 3,\r\n        inertia: 2,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    // LIFE TIER 2\r\n    enchantress: {\r\n      name: \"Enchantress\",\r\n      id: \"enchantress\",\r\n      family: \"life\",\r\n      tier: 2,\r\n      requirements: {\r\n        life: 5,\r\n        force: 1,\r\n      },\r\n      rewards: {\r\n        life: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    huntress: {\r\n      name: \"Huntress\",\r\n      id: \"huntress\",\r\n      family: \"life\",\r\n      tier: 2,\r\n      requirements: {\r\n        life: 3,\r\n        force: 2,\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        life: 2,\r\n        force: 1,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    nymph: {\r\n      name: \"Nymph\",\r\n      id: \"nymph\",\r\n      family: \"life\",\r\n      tier: 2,\r\n      requirements: {\r\n        life: 5,\r\n        inertia: 1,\r\n      },\r\n      rewards: {\r\n        life: 3,\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: true,\r\n    },\r\n    pegasus: {\r\n      name: \"Pegasus\",\r\n      id: \"pegasus\",\r\n      family: \"life\",\r\n      tier: 2,\r\n      requirements: {\r\n        life: 4,\r\n        inertia: 2,\r\n      },\r\n      rewards: {\r\n        life: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    stag: {\r\n      name: \"Stag\",\r\n      id: \"stag\",\r\n      family: \"life\",\r\n      tier: 2,\r\n      requirements: {\r\n        life: 4,\r\n        force: 2,\r\n      },\r\n      rewards: {\r\n        life: 2,\r\n      },\r\n      nodes: 4,\r\n      hasChoiceNode: true,\r\n    },\r\n    // LIFE TIER 3\r\n    goddess: {\r\n      name: \"Goddess\",\r\n      id: \"goddess\",\r\n      family: \"life\",\r\n      tier: 3,\r\n      requirements: {\r\n        life: 7,\r\n        inertia: 5,\r\n        force: 1,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    hope: {\r\n      name: \"Hope\",\r\n      id: \"hope\",\r\n      family: \"life\",\r\n      tier: 3,\r\n      requirements: {\r\n        life: 7,\r\n        inertia: 1,\r\n        force: 5,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n    splendor: {\r\n      name: \"Splendor\",\r\n      id: \"splendor\",\r\n      family: \"life\",\r\n      tier: 3,\r\n      requirements: {\r\n        life: 8,\r\n        inertia: 2,\r\n        force: 3,\r\n      },\r\n      rewards: {\r\n      },\r\n      nodes: 5,\r\n      hasChoiceNode: false,\r\n    },\r\n  }","import React from 'react';\r\nimport './App.css';\r\nimport _ from \"lodash\"\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport { aspects } from \"./Data.js\" // ascension data goes there\r\n\r\nconst strings = {\r\n  iterations: \"How many builds should be randomly generated. With higher amounts the search takes longer but is more likely to find the most efficient build. Keep this in the thousands, and increase it when you're doing crazy searches (4+ aspects chosen).\",\r\n  useFullCore: \"Use a full Core instead of its lone nodes. A full Core grants 2 of each embodiment for 5 points.\",\r\n  selfSustain: \"If enabled, shows aspects which can be removed after completing the chosen aspects.\",\r\n  preference: \"Controls the scoring system for builds. The first option will make the search favor builds which require less points to sustain after removing all unnecessary aspects. The second option favors paths which require the least amount of points to reach, but may require more points to sustain.\",\r\n  considerDipping: \"If enabled, the search will include the possibility of 'dipping' into a tier 2 aspects to get the embodiment reward on their second node, for only 2 points. This is rarely ever useful for finding shortest paths. If you're using this, you should increase the 'builds to try' setting considerably.\",\r\n}\r\n\r\nString.prototype.format = function () { // by gpvos from stackoverflow\r\n  var args = arguments;\r\n  return this.replace(/\\{(\\d+)\\}/g, function (m, n) { return args[n]; });\r\n};\r\n\r\n// generate a new \"internal\" aspect for each tier 2 aspect, one for each different embodiment rewards you can choose in node 2.\r\nvar num = 999; // object key for these aspects, starts at high number to uhm... avoid any problems\r\nvar extraAspects = {};\r\nfor (var x in aspects) {\r\n  var aspect = aspects[x];\r\n\r\n  if (aspect.tier == 2) {\r\n    var embs = {\r\n      force: 1,\r\n      entropy: 1,\r\n      form: 1,\r\n      inertia: 1,\r\n      life: 1,\r\n    }\r\n\r\n    for (var z in embs) {\r\n      var newAspect = {\r\n        name: aspect.name + \" (+{0})\".format(z),\r\n        id: aspect.id, // same id so the calc function doesnt pick multiple\r\n        family: \"special\",\r\n        tier: aspect.tier,\r\n        requirements: aspect.requirements, // does this reference or copy??\r\n        rewards: {},\r\n        nodes: aspect.nodes,\r\n        hasChoiceNode: aspect.hasChoiceNode,\r\n        generated: true, // if this property exists, aspect does not render in UI\r\n        extraEmbodimentType: z,\r\n      };\r\n\r\n      for (var v in aspect.rewards) {\r\n        newAspect.rewards[v] = aspect.rewards[v];\r\n      }\r\n\r\n      if (newAspect.rewards[z] == undefined)\r\n        newAspect.rewards[z] = 1;\r\n      else\r\n        newAspect.rewards[z] += embs[z]; // add +1 embodiment\r\n\r\n      num++;\r\n\r\n      extraAspects[num] = newAspect;\r\n    }\r\n\r\n    // generate dipping aspects, which only have 2 nodes and grant 1 embodiment\r\n    for (var b in embs) {\r\n      var newAspect = {\r\n        name: aspect.name + \" (dip, +{0})\".format(b),\r\n        id: aspect.id, // same id so the calc function doesnt pick multiple\r\n        family: \"special\",\r\n        tier: aspect.tier,\r\n        requirements: aspect.requirements,\r\n        rewards: {},\r\n        nodes: 2, // dipping aspects only have 2 nodes\r\n        hasChoiceNode: aspect.hasChoiceNode,\r\n        dipping: true,\r\n        generated: true, // if this property exists, aspect does not render in UI\r\n        extraEmbodimentType: b,\r\n      };\r\n\r\n      newAspect.rewards[b] = 1; // tier 2 dips reward 1 embodiment\r\n\r\n      num++;\r\n\r\n      extraAspects[num] = newAspect;\r\n    }\r\n  }\r\n}\r\n\r\nfor (var x in extraAspects) { // gotta do this here because we cannot change an object while we're iterating through it\r\n  aspects[x] = extraAspects[x];\r\n}\r\n\r\n// calculate embodiments rewarded per Ascension point spent\r\nfor (var x in aspects) {\r\n  var aspect = aspects[x];\r\n  aspect.rewardsPerPoint = {};\r\n  aspect.totalRequirements = 0;\r\n\r\n  for (var y in aspect.rewards) {\r\n    aspect.rewardsPerPoint[y] = aspect.rewards[y] / aspect.nodes\r\n  }\r\n\r\n  // total embodiment req\r\n  for (var z in aspect.requirements) {\r\n    aspect.totalRequirements += aspect.requirements[z];\r\n  }\r\n}\r\n\r\nclass Checkbox extends React.Component {\r\n  toggle(data, e) {\r\n    if (this.props.app.state.selection.includes(this.props.data)) {\r\n      this.props.app.updateSelection(this.props.data, null)\r\n\r\n      if (!this.props.data.isCoreNode && this.props.data.tier != 3)\r\n        this.props.app.updateExclusion(this.props.data, null)\r\n    }\r\n    else if (this.props.app.state.excluded.includes(this.props.data)) {\r\n      this.props.app.updateExclusion(this.props.data, null)\r\n    }\r\n    else {\r\n      this.props.app.updateSelection(this.props.data, null);\r\n    }\r\n  }\r\n  render() {\r\n    var state = \"checkbox \";\r\n    var text = \"\"\r\n\r\n    if (this.props.app.state.selection.includes(this.props.data)) {\r\n      state += \"chk-green\"\r\n      text = \"✓\"\r\n    }\r\n    else if (this.props.app.state.excluded.includes(this.props.data)) {\r\n      state += \"chk-red\"\r\n      text = \"✕\"\r\n    }\r\n\r\n    return (\r\n      <div className={\"unselectable \" + state} onClick={() => this.toggle()}>\r\n        <p>{text}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Aspect extends React.Component {\r\n  getRequirementsText() {\r\n    var elements = [];\r\n\r\n    for (var x in this.props.data.requirements) {\r\n      var amount = this.props.data.requirements[x]\r\n      var element;\r\n      var type = x; // serves to figure out css class\r\n\r\n      element = <div key={x} className={\"embodiment \" + type}><p>{amount}</p></div>\r\n      elements.push(element);\r\n    }\r\n\r\n    return elements;\r\n  }\r\n\r\n  getRewards() {\r\n    var text = [];\r\n    var embs = {\r\n      force: 0,\r\n      entropy: 0,\r\n      form: 0,\r\n      inertia: 0,\r\n      life: 0,\r\n    }\r\n\r\n    for (var x in this.props.data.rewards) {\r\n      var amount = this.props.data.rewards[x]\r\n      embs[x] = amount;\r\n    }\r\n\r\n    // don't even show the header for tier 3 aspects\r\n    var header = (this.props.data.tier != 3) ? \"Completion rewards:\" : \"\";\r\n    for (var z in embs) {\r\n      if (embs[z] != 0)\r\n        text.push(<p key={this.props.data.name + \"_tooltip_\" + z}>{embs[z] + \" \" + capitalizeFirstLetter(z)}</p>);\r\n    }\r\n\r\n    return <div>\r\n      <p>{header}</p>\r\n      <div>{text}</div>\r\n    </div>;\r\n  }\r\n\r\n  getTooltip() {\r\n    var name = this.props.data.name\r\n    var cost = this.props.data.nodes;\r\n    var rewards = this.getRewards();\r\n    var nodeText = ((this.props.data.nodes > 1) ? \" ({0} nodes)\" : \" ({0} node)\").format(cost)\r\n    \r\n    // note to self, dont nest <p> elements accidentally\r\n    return (<div className=\"tooltip\">\r\n        <p className=\"tooltip\">{name + nodeText}<br /></p>\r\n        {rewards}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Tippy content={this.getTooltip()} placement=\"bottom\" duration=\"0\">\r\n        <div className=\"aspect unselectable\">\r\n          <Checkbox data={this.props.data} app={this.props.app}></Checkbox>\r\n          <p>{this.props.data.name}</p>\r\n          <div className=\"embodiments-box\">\r\n            {this.getRequirementsText()}\r\n          </div>\r\n        </div>\r\n      </Tippy>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selection: [],\r\n      excluded: [], // excluded aspects\r\n      result: null,\r\n      waiting: false,\r\n      useFullCore: false,\r\n      considerDipping: false,\r\n      selfSustain: true,\r\n      pointsBudget: 26,\r\n      preference: \"0\", // scoring mode\r\n      iterations: 5000, // how many random builds are generated and compared\r\n    }\r\n  }\r\n\r\n  filterApplicableAspects(list) { // list is chosen aspects\r\n\r\n    // if player chose tier 2s, replace those with generated versions. later we will discard the duplicates once one of the variants has been chosen\r\n    var realList = [];\r\n    var excludedAspects = [];\r\n    for (var n = 0; n < this.state.excluded.length; n++) {\r\n      excludedAspects.push(this.state.excluded[n].id)\r\n    }\r\n    \r\n    for (var x = 0; x < list.length; x++) { // this works\r\n      var aspect = list[x];\r\n\r\n      if (aspect.tier == 2) {\r\n        for (var z in aspects) {\r\n          var asp = aspects[z];\r\n\r\n          if (asp.id == aspect.id && asp.generated == true) {\r\n            realList.push(asp);\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        realList.push(aspect);\r\n      }\r\n    }\r\n\r\n    list = realList;\r\n\r\n    var newList = {}\r\n    var reqs = {\r\n      force: 0,\r\n      entropy: 0,\r\n      form: 0,\r\n      inertia: 0,\r\n      life: 0,\r\n    }\r\n\r\n    function hasRelevantReward(aspect, reqs) {\r\n      for (var x in aspect.rewards) {\r\n        var reward = aspect.rewards[x];\r\n\r\n        if (excludedAspects.includes(aspect.id)) // excluded aspects\r\n          return false;\r\n\r\n        if (aspect.dipping && !this.state.considerDipping)\r\n          return false;\r\n\r\n        // !!! always ignore base tier 2s !!!, use only the generated versions, which have the +embodiment node considered\r\n        if (aspect.tier == 2 && aspect.generated == undefined)\r\n          return false;\r\n\r\n        // core handling. (do we need handling for the edge case where the calc chooses all 5 cores in non-core mode? probably. TODO)\r\n        if (aspect.id == \"core_full\" && !this.state.useFullCore)\r\n          return false;\r\n        else if (aspect.isCoreNode && this.state.useFullCore)\r\n          return false;\r\n\r\n        // filter out t2 variants that don't have a relevant +emb\r\n        if (aspect.generated != undefined && reqs[aspect.extraEmbodimentType] == 0)\r\n          return false;\r\n\r\n        // if an aspect rewards a type of embodiment we need, it's valid. Otherwise we discard it\r\n        if (reward > 0 && reqs[x] > 0)\r\n          return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    // check what embodiment types we need\r\n    for (var z in list) {\r\n      var aspect = list[z];\r\n\r\n      reqs.force = (aspect.requirements.force > reqs.force) ? aspect.requirements.force : reqs.force;\r\n\r\n      reqs.entropy = (aspect.requirements.entropy > reqs.entropy) ? aspect.requirements.entropy : reqs.entropy;\r\n\r\n      reqs.form = (aspect.requirements.form > reqs.form) ? aspect.requirements.form : reqs.form;\r\n\r\n      reqs.inertia = (aspect.requirements.inertia > reqs.inertia) ? aspect.requirements.inertia : reqs.inertia;\r\n\r\n      reqs.life = (aspect.requirements.life > reqs.life) ? aspect.requirements.life : reqs.life;\r\n    }\r\n\r\n    for (var x in aspects) {\r\n      var aspect = aspects[x];\r\n\r\n      const func = hasRelevantReward.bind(this);\r\n      if (func(aspect, reqs)) {\r\n        newList[x] = aspect;\r\n      }\r\n    }\r\n\r\n    // make sure the aspects we have chosen don't get filtered out.\r\n    // note to self: how the fuck does this avoid base t2s?\r\n    for (var y in list) {\r\n      if (!newList.hasOwnProperty(list[y].id))\r\n        newList[list[y].id] = list[y];\r\n    }\r\n\r\n    var highestReq = 0;\r\n    var aspectWithHighestRequirements;\r\n\r\n    for (var i in newList) {\r\n      if (newList[i].totalRequirements > highestReq)\r\n        aspectWithHighestRequirements = newList[i];\r\n    }\r\n\r\n    var chosenAspects = {}; // turn it into object and filter out irrelevant t2 variants\r\n    for (var b = 0; b < list.length; b++) {\r\n      var asp = list[b]\r\n      if ((asp.generated != undefined && reqs[asp.extraEmbodimentType] == 0) || asp.dipping != undefined) {\r\n        console.log(\"unneeded \" + asp.name)\r\n      }\r\n      else\r\n        chosenAspects[b] = list[b];\r\n    }\r\n\r\n    this.setState({\r\n      waiting: true,\r\n    })\r\n\r\n    return { // this works\r\n      reqs: reqs,\r\n      aspects: newList,\r\n      chosenAspects: chosenAspects,\r\n      aspectWithHighestRequirements: aspectWithHighestRequirements,\r\n    };\r\n  }\r\n\r\n  async calculate() {\r\n\r\n    // step 1: make a list of relevant aspects and gather the total embodiment requirements\r\n    var data = this.filterApplicableAspects(this.state.selection);\r\n\r\n    // warn if the user has excluded a lot of aspects\r\n    if (this.state.excluded.length >= 6)\r\n      if (!window.confirm(\"You've excluded a lot of aspects. I haven't implemented failsafes for that so if you continue, the webpage may freeze if there is literally no way to build towards the goal. Just a warnin'.\"))\r\n        return;\r\n\r\n    console.log(data.chosenAspects)\r\n\r\n    var bestBuilds = []; // todo\r\n    var bestBuild;\r\n\r\n    // quit if nothing was selected\r\n    if (Object.keys(data.chosenAspects).length == 0)\r\n      return;\r\n\r\n    // step 2: create random builds and save the most point-efficient one\r\n    for (var iteration = 0; iteration < this.state.iterations; iteration++) {\r\n      var aspects = data.aspects;\r\n      var chosenAspects = [] // we \"shuffle\" this.\r\n      for (var x in data.chosenAspects) {\r\n        chosenAspects.push(data.chosenAspects[x]);\r\n      }\r\n      shuffle(chosenAspects);\r\n\r\n      var build = [];\r\n\r\n      var availableAspects = {}; // unnecessary? we dont edit this list\r\n      for (var u in aspects) {\r\n        availableAspects[u] = aspects[u]\r\n      }\r\n\r\n      for (var attempts = 0; attempts < 2000; attempts++) {\r\n\r\n        // pick random aspect\r\n        var aspect = _.sample(availableAspects) // is this the problem? do force t2 ones take priority here or something?\r\n        var skipRandomChoice = false;\r\n\r\n        //CHECK IF WE MEET THE REQS FOR THE PLAYER-PICKED NODES, AND IF SO, START PUTTING THOSE IN AND IGNORE THE RANDOMLY PICKED ASPECT\r\n        var breakThis = false;\r\n        for (var v in chosenAspects) {\r\n          if (breakThis)\r\n            break;\r\n          \r\n          var chosenAspect = chosenAspects[v]\r\n\r\n          if (fullfillsRequirements(build, {chosenAspect}) && !aspectAlreadyPicked(build, chosenAspect)) {\r\n            build.push(chosenAspect)\r\n\r\n            skipRandomChoice = true;\r\n\r\n            console.log(\"picked \" + chosenAspect.name + \" (goal) because reqs were fulfilled\")\r\n\r\n            // if one of the goals was a t2, remove the variants of it from the list of goals\r\n            if (chosenAspect.tier == 2) {\r\n              var newGoals = []\r\n\r\n              for (var z in chosenAspects) {\r\n                var asp = chosenAspects[z];\r\n                if (asp.id == chosenAspect.id && asp != chosenAspect) {\r\n                  console.log(\"removed \" + asp.name)\r\n                }\r\n                else {\r\n                  newGoals.push(asp);\r\n                }\r\n              }\r\n\r\n              chosenAspects = newGoals;\r\n\r\n              breakThis = true; // can we just replace this with break?\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!skipRandomChoice) {\r\n          // choose it if we can and if we dont already have it in some way (relevant for t2s)\r\n          if (fullfillsRequirements(build, {aspect}) && !aspectAlreadyPicked(build, aspect)) {\r\n            build.push(aspect)\r\n\r\n            console.log(\"picked \" + aspect.name)\r\n          }\r\n        }\r\n\r\n        // check if we got all the nodes we wanted\r\n        var allChosenNodesObtained = false;\r\n        for (var n in chosenAspects) {\r\n          if (!build.includes(chosenAspects[n])) {\r\n            allChosenNodesObtained = false;\r\n            break;\r\n          }\r\n\r\n          allChosenNodesObtained = true;\r\n        }\r\n\r\n        // self-sustaining\r\n        // TODO MAKE IT TRY TO REMOVE THE MOST COSTLY ONES FIRST - to do this, first make an ordered list of aspects from most costly to cheapest\r\n        var aspectsToRemove = [];\r\n        var filteredBuild = build;\r\n        if (allChosenNodesObtained && this.state.selfSustain) {\r\n          for (var x = 0; x < build.length; x++) {\r\n            var asp = build[x];\r\n            var buildWithoutThat = filteredBuild.filter(function(val) {return val != asp });\r\n\r\n            if (fullfillsRequirements(buildWithoutThat) && !isInObject(asp, data.chosenAspects) && filteredBuild.includes(asp)) {\r\n              aspectsToRemove.push(asp);\r\n              filteredBuild = filteredBuild.filter(function(val) {return val != asp });\r\n            }\r\n          }\r\n        }\r\n\r\n        // break if we finished picking aspects for this build\r\n        if (allChosenNodesObtained)\r\n          break;\r\n      }\r\n\r\n      // < ! > Sometimes a build comes up with 0 aspects and points. I assume this happens when the find-aspects loop has finished and somehow, miraculously, all ~2000 attempts to find a starting point for the build have failed.\r\n      if (build.length != 0) {\r\n        console.log(build);\r\n        var pointsToReach = getTotalPoints(build);\r\n        var pointsToSustain = getTotalPoints(filteredBuild)\r\n\r\n        var buildInfo = {\r\n          aspects: build,\r\n          aspectsToRemove: aspectsToRemove,\r\n          points: pointsToReach,\r\n          finalCost: pointsToSustain,\r\n          score: pointsToReach + pointsToSustain + ((this.state.preference == \"0\") ? 0 : build.length), // less aspects = better, discourages needlessly picking builds only to despec them later\r\n          totalEmbodiments: getTotalRewards(build),\r\n        }\r\n\r\n        // check if new build is more point-efficient or tied, in which case we keep both tracked\r\n        if (bestBuild == undefined)\r\n          bestBuild = buildInfo;\r\n        else if (buildInfo.score < bestBuild.score && buildInfo.points <= this.state.pointsBudget) // favoring only finalCost doesnt really work, it picks 50-point builds\r\n          bestBuild = buildInfo;\r\n      }\r\n    }\r\n\r\n    console.log(\"--- Best Build ---\")\r\n    console.log(bestBuild);\r\n\r\n    this.setState({\r\n      result: bestBuild,\r\n      waiting: false,\r\n    })\r\n  }\r\n\r\n  // add/remove aspects to the list of aspects we want to calculate, called by the checkboxes\r\n  updateSelection(aspect, e) {\r\n    var selection = this.state.selection.slice();\r\n\r\n    if (!selection.includes(aspect))\r\n      selection.push(aspect);\r\n    else\r\n      selection = selection.filter(function(val, index, arr){ return val != aspect })\r\n\r\n    this.setState({\r\n      selection: selection\r\n    })\r\n  }\r\n\r\n  updateExclusion(aspect, e) {\r\n    var selection = this.state.excluded.slice();\r\n\r\n    if (!selection.includes(aspect))\r\n      selection.push(aspect);\r\n    else\r\n      selection = selection.filter(function(val, index, arr){ return val != aspect })\r\n\r\n    this.setState({\r\n      excluded: selection\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var forceAspects = [];\r\n    var entropyAspects = [];\r\n    var formAspects = [];\r\n    var inertiaAspects = [];\r\n    var lifeAspects = [];\r\n    var resultText = \"\"\r\n\r\n    if (this.state.waiting)\r\n      resultText = \"\" // removed, didnt work properly anyways\r\n    else if (this.state.result != null) {\r\n      if (this.state.result.finalCost > this.state.pointsBudget) {\r\n        resultText += \"Couldn't find any path that costs less than {0} points.\".format(this.state.pointsBudget)\r\n        // log the build anyways\r\n        console.log(this.state.result)\r\n      }\r\n      else {\r\n        if (this.state.result.points != this.state.result.finalCost)\r\n        resultText += \"Shortest path found ({0} points to reach, {1} points after self-sustaining): \".format(this.state.result.points, this.state.result.finalCost);\r\n        else\r\n        resultText += \"Shortest path found ({0} points to reach): \".format(this.state.result.points);\r\n\r\n        for (var x in this.state.result.aspects) {\r\n          resultText += this.state.result.aspects[x].name\r\n\r\n          if (x != this.state.result.aspects.length - 1 || !this.state.result.aspectsToRemove.length == 0)\r\n            resultText += \" -> \"\r\n        }\r\n\r\n        for (var z in this.state.result.aspectsToRemove) {\r\n          resultText += \" ❌ \" + this.state.result.aspectsToRemove[z].name\r\n\r\n          if (z != this.state.result.aspectsToRemove.length - 1)\r\n            resultText += \" -> \"\r\n        }\r\n      }\r\n    }\r\n\r\n    // aspect elements\r\n    for (var x in aspects) {\r\n      var aspect = aspects[x];\r\n      var currentAspect;\r\n\r\n      var element = <Aspect \r\n      data={aspect}\r\n      key={x}\r\n      clickCallback={this.updateSelection.bind(this)}\r\n      app={this}\r\n      />\r\n\r\n      var hr = <hr key={x + \"_hr\"}></hr>;\r\n\r\n      if (aspect.generated == undefined) { // don't display \"technical\" aspects\r\n        switch (aspect.family) {\r\n          case \"force\":\r\n            currentAspect = forceAspects;\r\n            break;\r\n          case \"entropy\":\r\n            currentAspect = entropyAspects;\r\n            break;\r\n          case \"form\":\r\n            currentAspect = formAspects;\r\n            break;\r\n          case \"inertia\":\r\n            currentAspect = inertiaAspects;\r\n            break;\r\n          case \"life\":\r\n            currentAspect = lifeAspects;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (currentAspect != undefined) {\r\n        if (currentAspect != undefined && currentAspect.generated == undefined)\r\n          currentAspect.push(element);\r\n\r\n        var aspectsAfterWhichWePutAnHrSoThingsLookNice = [\r\n          \"core_force\",\r\n          \"serpent\",\r\n          \"tiger\",\r\n          \"core_entropy\",\r\n          \"wolf\",\r\n          \"supplicant\",\r\n          \"core_form\",\r\n          \"silkworm\",\r\n          \"wealth\",\r\n          \"core_inertia\",\r\n          \"guardsman\",\r\n          \"rhinoceros\",\r\n          \"core_life\",\r\n          \"rabbit\",\r\n          \"stag\",\r\n        ]\r\n        if (aspectsAfterWhichWePutAnHrSoThingsLookNice.includes(aspect.id) && currentAspect.generated == undefined)\r\n          currentAspect.push(hr);\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"table\">\r\n          <div className=\"aspect-column\">\r\n            {forceAspects}\r\n          </div>\r\n          <div className=\"aspect-column\">\r\n            {entropyAspects}\r\n          </div>\r\n          <div className=\"aspect-column\">\r\n            {formAspects}\r\n          </div>\r\n          <div className=\"aspect-column\">\r\n            {inertiaAspects}\r\n          </div>\r\n          <div className=\"aspect-column\">\r\n            {lifeAspects}\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-interface\">\r\n          <Tippy content={strings.iterations} placement=\"bottom\" duration=\"0\">\r\n            <div className=\"num-input\">\r\n              <p>Builds to try:</p>\r\n              <input type=\"val\" value={this.state.iterations} onChange={(e) => this.setState({iterations: e.target.value})}></input>\r\n            </div>\r\n          </Tippy>\r\n          <Tippy content={strings.useFullCore} placement=\"bottom\" duration=\"0\">\r\n            <div className=\"checkbox-bottom-ui\">\r\n              <input type=\"checkbox\" checked={this.state.useFullCore} onChange={(e) => this.setState({useFullCore: e.target.checked})}></input>\r\n              <p>Use a full Core</p>\r\n            </div>\r\n          </Tippy>\r\n          <Tippy content={strings.considerDipping} placement=\"bottom\" duration=\"0\">\r\n            <div className=\"checkbox-bottom-ui\">\r\n              <input type=\"checkbox\" checked={this.state.considerDipping} onChange={(e) => this.setState({considerDipping: e.target.checked})}></input>\r\n              <p>Consider dipping tier 2 aspects</p>\r\n            </div>\r\n          </Tippy>\r\n          <Tippy content={strings.selfSustain} placement=\"bottom\" duration=\"0\">\r\n            <div className=\"checkbox-bottom-ui\">\r\n              <input type=\"checkbox\" checked={this.state.selfSustain} onChange={(e) => this.setState({selfSustain: e.target.checked})}></input>\r\n              <p>Self-sustain</p>\r\n            </div>\r\n          </Tippy>\r\n          <Tippy content={strings.preference} placement=\"bottom\" duration=\"0\">\r\n            <div className=\"dropdown\">\r\n              <select onChange={(e) => this.setState({preference: e.target.value})}>\r\n                <option value=\"0\">Prefer builds with lower final cost</option>\r\n                <option value=\"1\">Prefer builds with fewer points needed to reach</option>\r\n              </select>\r\n            </div>\r\n          </Tippy>\r\n        </div>\r\n        <div className=\"bottom-interface column\">\r\n          <button onClick={() => this.calculate()}>Search shortest path</button>\r\n          <p>{resultText}</p>\r\n        </div>\r\n        <div className=\"source-code-link\">\r\n          <a href=\"https://github.com/PinewoodPip/ee2calc\">Source code</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\n// --------- HELPER FUNCTIONS ------------\r\n\r\nfunction shuffle(array) { // https://stackoverflow.com/a/2450976\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) { // https://stackoverflow.com/a/1026087\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction isInObject(thing, obj) {\r\n  for (var x in obj) {\r\n    if (obj[x] == thing)\r\n      return true\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getTotalPoints(build) {\r\n  var points = 0;\r\n  for (var x = 0; x < build.length; x++) {\r\n    points += build[x].nodes;\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nfunction mergeIntoObject(build, aspect) {\r\n  var newList = {};\r\n  for (var x = 0; x < build.length; x++) {\r\n    newList[x] = build[x];\r\n  }\r\n  newList[aspect.id] = aspect;\r\n\r\n  return newList;\r\n}\r\n\r\nfunction randomProp(obj) {\r\n  var keys = Object.keys(obj);\r\n  return obj[keys[ keys.length * Math.random() << 0]];\r\n};\r\n\r\n// gets the highest requirement for each embodiment on a build\r\nfunction getTotalReqs(aspects) {\r\n  var embodiments = {\r\n    force: 0,\r\n    entropy: 0,\r\n    form: 0,\r\n    inertia: 0,\r\n    life: 0,\r\n  };\r\n\r\n  for (var x in aspects) {\r\n    var aspect = aspects[x];\r\n\r\n    for (var z in aspect.requirements) {\r\n      if (aspect.requirements[z] > embodiments[z])\r\n        embodiments[z] = aspect.requirements[z]\r\n    }\r\n  }\r\n\r\n  return embodiments;\r\n}\r\n\r\nfunction getTotalRewards(aspects) {\r\n  var rewards = {\r\n    force: 0,\r\n    entropy: 0,\r\n    form: 0,\r\n    inertia: 0,\r\n    life: 0,\r\n  };\r\n\r\n  for (var x in aspects) {\r\n    var aspect = aspects[x];\r\n\r\n    for (var r in aspect.rewards) {\r\n      rewards[r] += aspect.rewards[r];\r\n    }\r\n  }\r\n\r\n  return rewards;\r\n}\r\n\r\nfunction fullfillsRequirements(build, aspect=null) {\r\n  if (aspect != null) {\r\n    var embodiments = getTotalRewards(build);\r\n    var reqs = getTotalReqs(aspect);\r\n\r\n    for (var e in reqs) {\r\n      if (embodiments[e] < reqs[e])\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  else {\r\n    var embodiments = getTotalRewards(build);\r\n    var reqs = getTotalReqs(build);\r\n\r\n    for (var e in reqs) {\r\n      if (embodiments[e] < reqs[e])\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction aspectAlreadyPicked(build, aspect) {\r\n  for (var x = 0; x < build.length; x++) {\r\n    if (build[x].id == aspect.id)\r\n      return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport default App;\r\n\r\n// serity pls come back, we miss you :(","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}